// Generated by CoffeeScript 1.9.2
var httpput, qs, url_parse;

httpput = require('./httpput');

url_parse = require('url').parse;

qs = require('querystring');

module.exports = function(httpAddr, key) {
  var haslock, paramsforurl;
  haslock = false;
  if (typeof httpAddr === 'string') {
    if (httpAddr.indexOf('http://') !== 0) {
      httpAddr = "http://" + httpAddr;
    }
    httpAddr = url_parse(httpAddr);
  }
  paramsforurl = function(url) {
    return {
      hostname: httpAddr.hostname,
      port: httpAddr.port,
      path: "/v1/kv/" + url,
      method: 'PUT'
    };
  };
  return {
    isvalid: function() {
      return haslock;
    },
    acquire: function(session, contents, cb) {
      var params;
      params = paramsforurl(key + "?" + (qs.stringify({
        acquire: session
      })));
      return httpput(params, contents, function(err, result) {
        if (err != null) {
          haslock = false;
          console.error("Trying to acquire lock " + key);
          console.error(err);
          if (cb != null) {
            cb(haslock);
          }
          return;
        }
        haslock = result;
        if (cb != null) {
          return cb(haslock);
        }
      });
    },
    release: function(session, contents, cb) {
      var params;
      haslock = false;
      if (session == null) {
        if (cb != null) {
          cb(true);
        }
        return;
      }
      params = paramsforurl(key + "?" + (qs.stringify({
        release: session
      })));
      return httpput(params, contents, function(err, result) {
        if (err != null) {
          console.error("Trying to release lock " + key);
          console.error(err);
          if (cb != null) {
            cb(false);
          }
          return;
        }
        if (cb != null) {
          return cb(result);
        }
      });
    }
  };
};
