// Generated by CoffeeScript 1.8.0
var ConsulWatch, DiffPool, RedWireConsulService,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ConsulWatch = require('./consul-watch');

DiffPool = require('./diff-pool');

module.exports = RedWireConsulService = (function() {
  function RedWireConsulService(httpAddr, serviceId, callback) {
    this.distribute = __bind(this.distribute, this);
    this.next = __bind(this.next, this);
    this.members = __bind(this.members, this);
    this.end = __bind(this.end, this);
    this._index = 0;
    this._pool = new DiffPool(callback);
    this._watch = new ConsulWatch("" + httpAddr + "/v1/catalog/service/" + serviceId, (function(_this) {
      return function(services) {
        return _this._pool.set(services.map(function(s) {
          return {
            host: s.Node,
            address: s.Address,
            port: s.ServicePort
          };
        }));
      };
    })(this));
  }

  RedWireConsulService.prototype.end = function() {
    return this._watch.end();
  };

  RedWireConsulService.prototype.members = function() {
    return this._pool.members();
  };

  RedWireConsulService.prototype.next = function() {
    var members, result;
    members = this.members();
    this._index = this._index % members.length;
    result = members[this._index];
    this._index++;
    return result;
  };

  RedWireConsulService.prototype.distribute = function() {
    return (function(_this) {
      return function(mount, url, req, res, next) {
        req.target = _this.next();
        return next();
      };
    })(this);
  };

  return RedWireConsulService;

})();
