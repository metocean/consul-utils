// Generated by CoffeeScript 1.8.0
var get, parallel;

get = require('./httpget');

parallel = function(tasks, callback) {
  var count, result;
  count = tasks.length;
  result = function(cb) {
    var task, _i, _len, _results;
    if (count === 0) {
      return cb();
    }
    _results = [];
    for (_i = 0, _len = tasks.length; _i < _len; _i++) {
      task = tasks[_i];
      _results.push(task(function() {
        count--;
        if (count === 0) {
          return cb();
        }
      }));
    }
    return _results;
  };
  if (callback != null) {
    result(callback);
  }
  return result;
};

module.exports = function(httpAddr, callback) {
  return get("" + httpAddr + "/v1/catalog/services", function(err, services) {
    var errors, name, results, tags, tasks, _fn;
    if (err != null) {
      return callback([err]);
    }
    errors = [];
    results = [];
    tasks = [];
    _fn = function(name, tags) {
      return tasks.push(function(cb) {
        return get("" + httpAddr + "/v1/catalog/service/" + name, function(err, service) {
          if (err != null) {
            errors.push(err);
          } else {
            results.push(service);
          }
          return cb();
        });
      });
    };
    for (name in services) {
      tags = services[name];
      _fn(name, tags);
    }
    return parallel(tasks, function() {
      if (errors.length > 0) {
        return callback(errors);
      }
      return callback(null, results);
    });
  });
};
