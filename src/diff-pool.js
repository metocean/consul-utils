// Generated by CoffeeScript 1.8.0
var DiffPool,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

module.exports = DiffPool = (function() {
  function DiffPool(callback) {
    this.set = __bind(this.set, this);
    this.members = __bind(this.members, this);
    this._items = [];
    this._callback = callback;
  }

  DiffPool.prototype.members = function() {
    return this._items;
  };

  DiffPool.prototype.set = function(items) {
    var added, alltrue, e, found, i, index, key, next, removed, value, _i, _j, _len, _len1;
    removed = this._items.slice(0);
    next = [];
    added = [];
    for (_i = 0, _len = items.length; _i < _len; _i++) {
      i = items[_i];
      found = null;
      for (_j = 0, _len1 = removed.length; _j < _len1; _j++) {
        e = removed[_j];
        alltrue = true;
        for (key in i) {
          value = i[key];
          if (value !== e[key]) {
            alltrue = false;
            break;
          }
        }
        if (alltrue) {
          found = e;
          break;
        }
      }
      if (found != null) {
        index = removed.indexOf(found);
        removed.splice(index, 1);
        next.push(found);
        continue;
      }
      next.push(i);
      added.push(i);
    }
    this._items = next;
    if ((this._callback != null) && added.length !== 0 || removed.length !== 0) {
      return this._callback(added, removed);
    }
  };

  return DiffPool;

})();
